corrTableX
#visualmente:
plot(colb[,explanans],main="Correlación Población Cabecera Vs Población Restante", xlab=" Población de Cabecera", col="blue",ylab= "Población Restante")
# Chunk 1: getData
# Cargar archivo ----
# NO OLVIDAR set working directory
filename="colombia.csv"
colb=read.csv(filename, stringsAsFactors = FALSE)
# que variables y tipo
#str(colb)
# Chunk 2: regresiones
# Veamos los modelos propuestos.
# Primero sin poblacion resto, luego con esa:
LinRegA = lm(IDH ~ ., data = colb[,c(1,7)])
LinRegB = lm(IDH ~ ., data = colb[,c(1,7:8)])
# Chunk 3: regresionesPlot
stargazer(LinRegA,LinRegB,
title = "Modelos de Regresión",
label = "regresiones")
# Chunk 1: getData
# Cargar archivo ----
# NO OLVIDAR set working directory
filename="colombia.csv"
colb=read.csv(filename, stringsAsFactors = FALSE)
# que variables y tipo
#str(colb)
# Chunk 2: getMap
library(rgdal)
folder='COL_maps'
file='COL_adm1.shp'
mapaFile=file.path(folder,file)
mapCol <- rgdal::readOGR(mapaFile,stringsAsFactors=F)
sub_colb=colb[,c(1:2,7:8)]
mapCol_idh=merge(mapCol,sub_colb, by.x='NAME_1', by.y='Departamento',all.x=F)
# Chunk 3
# nombre de la variables que usarÃ©:
dimensions=c("NAME_1","IDH","cabeLog","restoLog")
# creo un nuevo data frame con esas:
dataCluster=mapCol_idh@data[,c(dimensions)]
# como la data es numerica la normalizo (menos la column 1):
dataCluster[,-1]=scale(dataCluster[,-1])
## APLICANDO TECNICA KMEANS
# calculo 3 clusters
resultado=kmeans(dataCluster[,-1],3)
#creo data frame con los clusters:
clusters=as.data.frame(resultado$cluster)
# aÃ±ado columna con nombre de regiones
clusters$NAME_1=dataCluster$NAME_1
names(clusters)=c('cluster','NAME_1')
#hago el merge hacia el mapa:
mapCol_idh=merge(mapCol_idh,clusters, by='NAME_1',all.x=F)
# Chunk 4: plotMap1
library(RColorBrewer)
library(classInt)
#Variable a colorear
varToPLot=mapCol_idh$cluster
# Decidir color:
aggregate(mapCol_idh@data[,c(10,11,12)],by=list(mapCol_idh@data$cluster),FUN=mean)
numberOfClasses = length(unique(varToPLot))
colorForScale='Set2'
paleta = brewer.pal(numberOfClasses, colorForScale)
# grafico mapa basico
plot(mapCol,col='grey',border=0)
plot(mapCol_idh,main="Clasificacion de departamentos por IDH", col = paleta[varToPLot],border=F,add=T)
legend('left', legend = c("Bajo","Alto","Medio"),
fill = paleta,
cex = 0.6,
bty = "n",
title="Conglomerado")
# Chunk 1: getData
# Cargar archivo ----
# NO OLVIDAR set working directory
filename="colombia.csv"
colb=read.csv(filename, stringsAsFactors = FALSE)
# que variables y tipo
#str(colb)
# Chunk 2: regresiones
# Veamos los modelos propuestos.
# Primero sin poblacion resto, luego con esa:
LinRegA = lm(IDH ~ ., data = colb[,c(1,7)])
LinRegB = lm(IDH ~ ., data = colb[,c(1,7:8)])
# Chunk 3: regresionesPlot
stargazer(LinRegA,LinRegB,
title = "Modelos de Regresión",
label = "regresiones")
# Chunk 1: getData
# Cargar archivo ----
# NO OLVIDAR set working directory
filename="colombia.csv"
colb=read.csv(filename, stringsAsFactors = FALSE)
# que variables y tipo
#str(colb)
# Chunk 2: getMap
library(rgdal)
folder='COL_maps'
file='COL_adm1.shp'
mapaFile=file.path(folder,file)
mapCol <- rgdal::readOGR(mapaFile,stringsAsFactors=F)
sub_colb=colb[,c(1:2,7:8)]
mapCol_idh=merge(mapCol,sub_colb, by.x='NAME_1', by.y='Departamento',all.x=F)
# Chunk 3
# nombre de la variables que usarÃ©:
dimensions=c("NAME_1","IDH","cabeLog","restoLog")
# creo un nuevo data frame con esas:
dataCluster=mapCol_idh@data[,c(dimensions)]
# como la data es numerica la normalizo (menos la column 1):
dataCluster[,-1]=scale(dataCluster[,-1])
## APLICANDO TECNICA KMEANS
# calculo 3 clusters
resultado=kmeans(dataCluster[,-1],3)
#creo data frame con los clusters:
clusters=as.data.frame(resultado$cluster)
# aÃ±ado columna con nombre de regiones
clusters$NAME_1=dataCluster$NAME_1
names(clusters)=c('cluster','NAME_1')
#hago el merge hacia el mapa:
mapCol_idh=merge(mapCol_idh,clusters, by='NAME_1',all.x=F)
# Chunk 4: plotMap1
library(RColorBrewer)
library(classInt)
#Variable a colorear
varToPLot=mapCol_idh$cluster
# Decidir color:
aggregate(mapCol_idh@data[,c(10,11,12)],by=list(mapCol_idh@data$cluster),FUN=mean)
numberOfClasses = length(unique(varToPLot))
colorForScale='Set2'
paleta = brewer.pal(numberOfClasses, colorForScale)
# grafico mapa basico
plot(mapCol,col='grey',border=0)
plot(mapCol_idh,main="Clasificacion de departamentos por IDH", col = paleta[varToPLot],border=F,add=T)
legend('left', legend = c("Bajo","Alto","Medio"),
fill = paleta,
cex = 0.6,
bty = "n",
title="Conglomerado")
# Chunk 1: getData
# Cargar archivo ----
# NO OLVIDAR set working directory
filename="colombia.csv"
colb=read.csv(filename, stringsAsFactors = FALSE)
# que variables y tipo
#str(colb)
# Chunk 2: regresiones
# Veamos los modelos propuestos.
# Primero sin poblacion resto, luego con esa:
LinRegA = lm(IDH ~ ., data = colb[,c(1,7)])
LinRegB = lm(IDH ~ ., data = colb[,c(1,7:8)])
# Chunk 3: regresionesPlot
stargazer(LinRegA,LinRegB,
title = "Modelos de Regresión",
label = "regresiones")
# Chunk 1: getData
# Cargar archivo ----
# NO OLVIDAR set working directory
filename="colombia.csv"
colb=read.csv(filename, stringsAsFactors = FALSE)
colb$cabeLog=log(colb$Poblacion.Cabecera)
colb$restoLog=log(colb$Poblacion.Resto)
# que variables y tipo
#str(colb)
# Chunk 2: regresiones
# Veamos los modelos propuestos.
# Primero sin poblacion resto, luego con esa:
LinRegA = lm(IDH ~ ., data = colb[,c(1,7)])
LinRegB = lm(IDH ~ ., data = colb[,c(1,7:8)])
# Chunk 3: regresionesPlot
stargazer(LinRegA,LinRegB,
title = "Modelos de Regresión",
label = "regresiones")
# Chunk 1: getData
# Cargar archivo ----
# NO OLVIDAR set working directory
filename="colombia.csv"
colb=read.csv(filename, stringsAsFactors = FALSE)
colb$cabeLog=log(colb$Poblacion.Cabecera)
colb$restoLog=log(colb$Poblacion.Resto)
# que variables y tipo
#str(colb)
# Chunk 2: regresiones
# Veamos los modelos propuestos.
# Primero sin poblacion resto, luego con esa:
LinRegA = lm(IDH ~ ., data = colb[,c(1,7)])
LinRegB = lm(IDH ~ ., data = colb[,c(1,7:8)])
# Chunk 3: regresionesPlot
stargazer(LinRegA,LinRegB,
title = "Modelos de Regresión",
label = "regresiones")
# Chunk 1: getData
# Cargar archivo ----
# NO OLVIDAR set working directory
filename="colombia.csv"
colb=read.csv(filename, stringsAsFactors = FALSE)
colb$cabeLog=log(colb$Poblacion.Cabecera)
colb$restoLog=log(colb$Poblacion.Resto)
# que variables y tipo
#str(colb)
# Chunk 2: regresiones
# Veamos los modelos propuestos.
# Primero sin poblacion resto, luego con esa:
LinRegA = lm(IDH ~ ., data = colb[,c(1,7)])
LinRegB = lm(IDH ~ ., data = colb[,c(1,7:8)])
# Chunk 3: regresionesPlot
library(stargazer)
stargazer(LinRegA,LinRegB,
title = "Modelos de Regresión",
label = "regresiones")
# NO OLVIDAR set working directory
filename="colombia.csv"
colb=read.csv(filename, stringsAsFactors = FALSE)
colb$cabeLog=log(colb$Poblacion.Cabecera)
colb$restoLog=log(colb$Poblacion.Resto)
# que variables y tipo
#str(colb)
@
library(rgdal)
folder='COL_maps'
file='COL_adm1.shp'
mapaFile=file.path(folder,file)
mapCol <- rgdal::readOGR(mapaFile,stringsAsFactors=F)
sub_colb=colb[,c(1:2,7:8)]
mapCol_idh=merge(mapCol,sub_colb, by.x='NAME_1', by.y='Departamento',all.x=F)
# nombre de la variables que usarÃ©:
dimensions=c("NAME_1","IDH","cabeLog","restoLog")
# creo un nuevo data frame con esas:
dataCluster=mapCol_idh@data[,c(dimensions)]
# como la data es numerica la normalizo (menos la column 1):
dataCluster[,-1]=scale(dataCluster[,-1])
resultado=kmeans(dataCluster[,-1],3)
#creo data frame con los clusters:
clusters=as.data.frame(resultado$cluster)
# aÃ±ado columna con nombre de regiones
clusters$NAME_1=dataCluster$NAME_1
names(clusters)=c('cluster','NAME_1')
#hago el merge hacia el mapa:
mapCol_idh=merge(mapCol_idh,clusters, by='NAME_1',all.x=F)
library(RColorBrewer)
library(classInt)
#Variable a colorear
varToPLot=mapCol_idh$cluster
# Decidir color:
aggregate(mapCol_idh@data[,c(10,11,12)],by=list(mapCol_idh@data$cluster),FUN=mean)
numberOfClasses = length(unique(varToPLot))
colorForScale='Set2'
paleta = brewer.pal(numberOfClasses, colorForScale)
# grafico mapa basico
plot(mapCol,col='grey',border=0)
plot(mapCol_idh,main="Clasificacion de departamentos por IDH", col = paleta[varToPLot],border=F,add=T)
legend('left', legend = c("Bajo","Alto","Medio"),
fill = paleta,
cex = 0.6,
bty = "n",
title="Conglomerado")
# Chunk 1: getData
# Cargar archivo ----
# NO OLVIDAR set working directory
filename="colombia.csv"
colb=read.csv(filename, stringsAsFactors = FALSE)
colb$cabeLog=log(colb$Poblacion.Cabecera)
colb$restoLog=log(colb$Poblacion.Resto)
# que variables y tipo
#str(colb)
# Chunk 2: getMap
library(rgdal)
folder='COL_maps'
file='COL_adm1.shp'
mapaFile=file.path(folder,file)
mapCol <- rgdal::readOGR(mapaFile,stringsAsFactors=F)
sub_colb=colb[,c(1:2,7:8)]
mapCol_idh=merge(mapCol,sub_colb, by.x='NAME_1', by.y='Departamento',all.x=F)
# Chunk 3
# nombre de la variables que usarÃ©:
dimensions=c("NAME_1","IDH","cabeLog","restoLog")
# creo un nuevo data frame con esas:
dataCluster=mapCol_idh@data[,c(dimensions)]
# como la data es numerica la normalizo (menos la column 1):
dataCluster[,-1]=scale(dataCluster[,-1])
## APLICANDO TECNICA KMEANS
# calculo 3 clusters
resultado=kmeans(dataCluster[,-1],3)
#creo data frame con los clusters:
clusters=as.data.frame(resultado$cluster)
# aÃ±ado columna con nombre de regiones
clusters$NAME_1=dataCluster$NAME_1
names(clusters)=c('cluster','NAME_1')
#hago el merge hacia el mapa:
mapCol_idh=merge(mapCol_idh,clusters, by='NAME_1',all.x=F)
# Chunk 4: plotMap1
library(RColorBrewer)
library(classInt)
#Variable a colorear
varToPLot=mapCol_idh$cluster
# Decidir color:
aggregate(mapCol_idh@data[,c(10,11,12)],by=list(mapCol_idh@data$cluster),FUN=mean)
numberOfClasses = length(unique(varToPLot))
colorForScale='Set2'
paleta = brewer.pal(numberOfClasses, colorForScale)
# grafico mapa basico
plot(mapCol,col='grey',border=0)
plot(mapCol_idh,main="Clasificacion de departamentos por IDH", col = paleta[varToPLot],border=F,add=T)
legend('left', legend = c("Bajo","Alto","Medio"),
fill = paleta,
cex = 0.6,
bty = "n",
title="Conglomerado")
# Chunk 1: getData
# Cargar archivo ----
# NO OLVIDAR set working directory
filename="colombia.csv"
colb=read.csv(filename, stringsAsFactors = FALSE)
colb$cabeLog=log(colb$Poblacion.Cabecera)
colb$restoLog=log(colb$Poblacion.Resto)
# que variables y tipo
#str(colb)
# Chunk 2: getMap
library(rgdal)
folder='COL_maps'
file='COL_adm1.shp'
mapaFile=file.path(folder,file)
mapCol <- rgdal::readOGR(mapaFile,stringsAsFactors=F)
sub_colb=colb[,c(1:2,7:8)]
mapCol_idh=merge(mapCol,sub_colb, by.x='NAME_1', by.y='Departamento',all.x=F)
# Chunk 3
# nombre de la variables que usarÃ©:
dimensions=c("NAME_1","IDH","cabeLog","restoLog")
# creo un nuevo data frame con esas:
dataCluster=mapCol_idh@data[,c(dimensions)]
# como la data es numerica la normalizo (menos la column 1):
dataCluster[,-1]=scale(dataCluster[,-1])
## APLICANDO TECNICA KMEANS
# calculo 3 clusters
resultado=kmeans(dataCluster[,-1],3)
#creo data frame con los clusters:
clusters=as.data.frame(resultado$cluster)
# aÃ±ado columna con nombre de regiones
clusters$NAME_1=dataCluster$NAME_1
names(clusters)=c('cluster','NAME_1')
#hago el merge hacia el mapa:
mapCol_idh=merge(mapCol_idh,clusters, by='NAME_1',all.x=F)
# Chunk 4: plotMap1
library(RColorBrewer)
library(classInt)
#Variable a colorear
varToPLot=mapCol_idh$cluster
# Decidir color:
aggregate(mapCol_idh@data[,c(10,11,12)],by=list(mapCol_idh@data$cluster),FUN=mean)
numberOfClasses = length(unique(varToPLot))
colorForScale='Set2'
paleta = brewer.pal(numberOfClasses, colorForScale)
# grafico mapa basico
plot(mapCol,col='grey',border=0)
plot(mapCol_idh,main="Clasificacion de departamentos por IDH", col = paleta[varToPLot],border=F,add=T)
legend('left', legend = c("Bajo","Alto","Medio"),
fill = paleta,
cex = 0.6,
bty = "n",
title="Conglomerado")
# Chunk 1: getData
# Cargar archivo ----
# NO OLVIDAR set working directory
filename="colombia.csv"
colb=read.csv(filename, stringsAsFactors = FALSE)
colb$cabeLog=log(colb$Poblacion.Cabecera)
colb$restoLog=log(colb$Poblacion.Resto)
# que variables y tipo
#str(colb)
# Chunk 2: getMap
library(rgdal)
folder='COL_maps'
file='COL_adm1.shp'
mapaFile=file.path(folder,file)
mapCol <- rgdal::readOGR(mapaFile,stringsAsFactors=F)
sub_colb=colb[,c(1:2,7:8)]
mapCol_idh=merge(mapCol,sub_colb, by.x='NAME_1', by.y='Departamento',all.x=F)
# Chunk 3
# nombre de la variables que usarÃ©:
dimensions=c("NAME_1","IDH","cabeLog","restoLog")
# creo un nuevo data frame con esas:
dataCluster=mapCol_idh@data[,c(dimensions)]
# como la data es numerica la normalizo (menos la column 1):
dataCluster[,-1]=scale(dataCluster[,-1])
## APLICANDO TECNICA KMEANS
# calculo 3 clusters
resultado=kmeans(dataCluster[,-1],3)
#creo data frame con los clusters:
clusters=as.data.frame(resultado$cluster)
# aÃ±ado columna con nombre de regiones
clusters$NAME_1=dataCluster$NAME_1
names(clusters)=c('cluster','NAME_1')
#hago el merge hacia el mapa:
mapCol_idh=merge(mapCol_idh,clusters, by='NAME_1',all.x=F)
# Chunk 4: plotMap1
library(RColorBrewer)
library(classInt)
#Variable a colorear
varToPLot=mapCol_idh$cluster
# Decidir color:
aggregate(mapCol_idh@data[,c(10,11,12)],by=list(mapCol_idh@data$cluster),FUN=mean)
numberOfClasses = length(unique(varToPLot))
colorForScale='Set2'
paleta = brewer.pal(numberOfClasses, colorForScale)
# grafico mapa basico
plot(mapCol,col='grey',border=0)
plot(mapCol_idh,main="Clasificacion de departamentos por IDH", col = paleta[varToPLot],border=F,add=T)
legend('left', legend = c("Bajo","Alto","Medio"),
fill = paleta,
cex = 0.6,
bty = "n",
title="Conglomerado")
# Chunk 1: getData
# Cargar archivo ----
# NO OLVIDAR set working directory
filename="colombia.csv"
colb=read.csv(filename, stringsAsFactors = FALSE)
colb$cabeLog=log(colb$Poblacion.Cabecera)
colb$restoLog=log(colb$Poblacion.Resto)
# que variables y tipo
#str(colb)
# Chunk 2: getMap
library(rgdal)
folder='COL_maps'
file='COL_adm1.shp'
mapaFile=file.path(folder,file)
mapCol <- rgdal::readOGR(mapaFile,stringsAsFactors=F)
sub_colb=colb[,c(1:2,7:8)]
mapCol_idh=merge(mapCol,sub_colb, by.x='NAME_1', by.y='Departamento',all.x=F)
# Chunk 3
# nombre de la variables que usarÃ©:
dimensions=c("NAME_1","IDH","cabeLog","restoLog")
# creo un nuevo data frame con esas:
dataCluster=mapCol_idh@data[,c(dimensions)]
# como la data es numerica la normalizo (menos la column 1):
dataCluster[,-1]=scale(dataCluster[,-1])
## APLICANDO TECNICA KMEANS
# calculo 3 clusters
resultado=kmeans(dataCluster[,-1],3)
#creo data frame con los clusters:
clusters=as.data.frame(resultado$cluster)
# aÃ±ado columna con nombre de regiones
clusters$NAME_1=dataCluster$NAME_1
names(clusters)=c('cluster','NAME_1')
#hago el merge hacia el mapa:
mapCol_idh=merge(mapCol_idh,clusters, by='NAME_1',all.x=F)
# Chunk 4: plotMap1
library(RColorBrewer)
library(classInt)
#Variable a colorear
varToPLot=mapCol_idh$cluster
# Decidir color:
aggregate(mapCol_idh@data[,c(10,11,12)],by=list(mapCol_idh@data$cluster),FUN=mean)
numberOfClasses = length(unique(varToPLot))
colorForScale='Set2'
paleta = brewer.pal(numberOfClasses, colorForScale)
# grafico mapa basico
plot(mapCol,col='grey',border=0)
plot(mapCol_idh,main="Clasificacion de departamentos por IDH", col = paleta[varToPLot],border=F,add=T)
legend('left', legend = c("Bajo","Alto","Medio"),
fill = paleta,
cex = 0.6,
bty = "n",
title="Conglomerado")
# Chunk 1: getData
# Cargar archivo ----
# NO OLVIDAR set working directory
filename="colombia.csv"
colb=read.csv(filename, stringsAsFactors = FALSE)
colb$cabeLog=log(colb$Poblacion.Cabecera)
colb$restoLog=log(colb$Poblacion.Resto)
# que variables y tipo
#str(colb)
# Chunk 2: getMap
library(rgdal)
folder='COL_maps'
file='COL_adm1.shp'
mapaFile=file.path(folder,file)
mapCol <- rgdal::readOGR(mapaFile,stringsAsFactors=F)
sub_colb=colb[,c(1:2,7:8)]
mapCol_idh=merge(mapCol,sub_colb, by.x='NAME_1', by.y='Departamento',all.x=F)
# Chunk 3
# nombre de la variables que usarÃ©:
dimensions=c("NAME_1","IDH","cabeLog","restoLog")
# creo un nuevo data frame con esas:
dataCluster=mapCol_idh@data[,c(dimensions)]
# como la data es numerica la normalizo (menos la column 1):
dataCluster[,-1]=scale(dataCluster[,-1])
## APLICANDO TECNICA KMEANS
# calculo 3 clusters
resultado=kmeans(dataCluster[,-1],3)
#creo data frame con los clusters:
clusters=as.data.frame(resultado$cluster)
# aÃ±ado columna con nombre de regiones
clusters$NAME_1=dataCluster$NAME_1
names(clusters)=c('cluster','NAME_1')
#hago el merge hacia el mapa:
mapCol_idh=merge(mapCol_idh,clusters, by='NAME_1',all.x=F)
# Chunk 4: plotMap1
library(RColorBrewer)
library(classInt)
#Variable a colorear
varToPLot=mapCol_idh$cluster
# Decidir color:
aggregate(mapCol_idh@data[,c(10,11,12)],by=list(mapCol_idh@data$cluster),FUN=mean)
numberOfClasses = length(unique(varToPLot))
colorForScale='Set2'
paleta = brewer.pal(numberOfClasses, colorForScale)
# grafico mapa basico
plot(mapCol,col='grey',border=0)
plot(mapCol_idh,main="Clasificacion de departamentos por IDH", col = paleta[varToPLot],border=F,add=T)
legend('left', legend = c("Bajo","Alto","Medio"),
fill = paleta,
cex = 0.6,
bty = "n",
title="Conglomerado")
