\section{Exploración Espacial}\label{espacial}


<<getData, echo=FALSE>>=
# Cargar archivo ----

# NO OLVIDAR set working directory
filename="colombia.csv"
colb=read.csv(filename, stringsAsFactors = FALSE)
colb$cabeLog=log(colb$Poblacion.Cabecera)
colb$restoLog=log(colb$Poblacion.Resto)
# que variables y tipo
#str(colb)
@

Como acabamos de ver en la Tabla \ref{regresiones} en la pÃ¡gina \pageref{regresiones}, si quisieras sintetizar la multidimensionalidad de nuestros indicadores, podrÃ?amos usar tres de las cuatro variables que tenemos (un par de las originales tiene demasiada correlaciÃ³n). 

AsÃ?, propongo que calculemos conglomerados de paÃ?ses usando toda la informaciÃ³n de tres de los indicadores. Como nuestras variables son ordinales utilizaremos un proceso de conglomeraciÃ³n donde las distancia serÃ¡n calculadas usando la medida {\bf gower} propuestas en \cite{gower_general_1971}, y para los enlazamientos usaremos la tÃ©cnica de {\bf medoides} segÃºn \cite{reynolds_clustering_2006}. Los tres conglomerados se muestran en la Figura \ref{clustmap}.

<<getMap, echo=FALSE,results=hide>>=
library(rgdal)
folder='COL_maps'
file='COL_adm1.shp'
mapaFile=file.path(folder,file)
mapCol <- rgdal::readOGR(mapaFile,stringsAsFactors=F) 
sub_colb=colb[,c(1:2,7:8)]
mapCol_idh=merge(mapCol,sub_colb, by.x='NAME_1', by.y='Departamento',all.x=F)
@


<<echo=FALSE>>=

# nombre de la variables que usarÃ©:
dimensions=c("NAME_1","IDH","cabeLog","restoLog")

# creo un nuevo data frame con esas:
dataCluster=mapCol_idh@data[,c(dimensions)]

# como la data es numerica la normalizo (menos la column 1):
dataCluster[,-1]=scale(dataCluster[,-1])

## APLICANDO TECNICA KMEANS

# calculo 3 clusters

resultado=kmeans(dataCluster[,-1],3)

#creo data frame con los clusters:
clusters=as.data.frame(resultado$cluster)

# aÃ±ado columna con nombre de regiones
clusters$NAME_1=dataCluster$NAME_1
names(clusters)=c('cluster','NAME_1')
#hago el merge hacia el mapa:
mapCol_idh=merge(mapCol_idh,clusters, by='NAME_1',all.x=F)

@



\begin{figure}[h]
\centering
<<plotMap1, echo=FALSE, fig=TRUE>>=
library(RColorBrewer)
library(classInt)
#Variable a colorear
varToPLot=mapCol_idh$cluster
# Decidir color:
aggregate(mapCol_idh@data[,c(10,11,12)],by=list(mapCol_idh@data$cluster),FUN=mean)

numberOfClasses = length(unique(varToPLot)) 
colorForScale='Set2'
paleta = brewer.pal(numberOfClasses, colorForScale)

# grafico mapa basico
plot(mapCol,col='grey',border=0)

plot(mapCol_idh,main="Clasificacion de departamentos por IDH", col = paleta[varToPLot],border=F,add=T)
legend('left', legend = c("Bajo","Alto","Medio"),
       fill = paleta, 
       cex = 0.6, 
       bty = "n",
       title="Conglomerado")
@

\caption{Paises conglomerados segun sus indicadores sociopolÃ?ticos}\label{clustmap}
\end{figure}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\endinput